name: Pull Request (Xcode 11.6)

env:
  RUST_BUILD_OUTPUT_DIR: "build/rust"
  RUST_BINARY_DIR: "build/rust/x86_64-apple-darwin/release"

on:
  pull_request:
    branches:
      - main

jobs:
  test_ios:
    name: Run iOS tests
    runs-on: macOS-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Use Xcode 11.6
        run: sudo xcode-select -switch /Applications/Xcode_11.6.app

      - name: Prepare Tools
        run: |
          Scripts/prepare_build_tools

      - name: "Cache dependencies"
        uses: actions/cache@v2
        with:
          path: Submodules/pact-reference/rust/target
          key: ${{ runner.os }}-pactswift-ios-submodule-${{ hashFiles('**/Submodules/pact-reference/rust/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-pactswift-ios-submodule-
            ${{ runner.os }}-

      - name: Test iOS target (Xcode)
        run: |
          set -o pipefail && xcodebuild clean test -project PactSwift.xcodeproj -scheme PactSwift-iOS -destination "platform=iOS Simulator,name=iPhone 11 Pro" | xcbeautify

      - name: Test macOS target (Xcode)
        run: |
          set -o pipefail && xcodebuild clean test -project PactSwift.xcodeproj -scheme PactSwift-macOS -destination "platform=macOS,arch=x86_64" | xcbeautify

      - name: Test it builds for Carthage
        run: |
          carthage build --no-skip-current

  test_spm:
    name: Swift CLI build and test (SPM)
    runs-on: macOS-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Use Xcode 11.6
        run: sudo xcode-select -switch /Applications/Xcode_11.6.app

      - name: Prepare Tools
        run: |
          Scripts/prepare_build_tools

      - name: "Cache dependencies"
        uses: actions/cache@v2
        with:
          path: Submodules/pact-reference/rust/target
          key: ${{ runner.os }}-pactswift-spm-submodule-${{ hashFiles('**/Submodules/pact-reference/rust/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-pactswift-spm-submodule-
            ${{ runner.os }}-

      - name: Build binary && swift test
        run: |
          mkdir -p ${{ env.RUST_BUILD_OUTPUT_DIR }}
          rustup target add x86_64-apple-darwin
          cd Submodules/pact-reference/rust/pact_mock_server_ffi && cargo build --release --target=x86_64-apple-darwin --target-dir ../../../../${{ env.RUST_BUILD_OUTPUT_DIR }}
          cd ../../../..
          ls -la ${{ env.RUST_BINARY_DIR }}
          cp ${{ env.RUST_BINARY_DIR }}/libpact_mock_server_ffi.a ${{ env.RUST_BINARY_DIR }}/libpact_mock_server.a
          echo "üë∑‚Äç‚ôÄÔ∏è running swift build -c debug"
          set -o pipefail && swift build -c debug | xcbeautify
          echo "üß™ running swift test"
          set -o pipefail && swift test -Xlinker -L${{ env.RUST_BINARY_DIR }} | xcbeautify

