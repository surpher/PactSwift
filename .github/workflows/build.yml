name: Build

on:
  pull_request:
    types:
        - opened
        - synchronize
        - reopened
        - ready_for_review
  workflow_dispatch:

env:
  RUST_TARGET_PATH: pact-reference

jobs:
  test_ios:
    name: "ü§ñ Test iOS"
    runs-on: ${{ matrix.host }}

    strategy:
      fail-fast: true
      matrix:
        host: [macos-13, macos-14]
        platform: [ios, macos]
        include:
          - platform: ios
            scheme: "PactSwift-iOS"
            destination: "platform=iOS Simulator,name=iPhone 15 Pro"
          - platform: macos
            scheme: "PactSwift-macOS"
            destination: "arch=x86_64"
          - host: macos-13
            xcode: 14.3.1
          - host: macos-14
            xcode: 15.3

    env:
      SCHEME: "PactSwift-iOS"
      DESTINATION: ${{ matrix.destination }}

    concurrency:
      group: test_${{ matrix.host }}_${{ matrix.xcode }}_iOS_${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: "üßë‚Äçüíª Checkout repository"
        uses: actions/checkout@v3

      - name: "üè≠ Use Xcode ${{ matrix.xcode }}"
        run: sudo xcode-select -switch /Applications/Xcode_${{ matrix.xcode }}.app

      - name: "üß∞ Prepare tools"
        run: |
          Scripts/prepare_build_tools

      - name: "üß™ Run tests (xcodebuild)"
        run: |
          set -o pipefail && xcodebuild -resolvePackageDependencies && xcodebuild clean test -project PactSwift.xcodeproj -scheme "$SCHEME" -destination "$DESTINATION" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcbeautify

      - name: "‚öóÔ∏è Run tests (swift)"
        run: |
          swift build
          swift test -c release
