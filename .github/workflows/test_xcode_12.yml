name: Run tests (12)

on:
  pull_request:
    branches:
      - master

jobs:
  test_ios:
    name: Run tests
    runs-on: macOS-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Use Xcode 12.2
        run: sudo xcode-select -switch /Applications/Xcode_12.2.app

      - name: Prepare Tools
        run: |
          Scripts/prepare_build_tools

      - name: "Cache dependencies"
        uses: actions/cache@v2
        with:
          path: Submodules/pact-reference/rust/target
          key: ${{ runner.os }}-carthage-${{ hashFiles('**/Submodules/pact-reference/rust/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-carthage-
            ${{ runner.os }}-

      - name: Test iOS target (Xcode)
        run: |
          set -o pipefail && xcodebuild clean test -project PactSwift.xcodeproj -scheme PactSwift-iOS -destination "platform=iOS Simulator,name=iPhone 12 Pro" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcbeautify

      - name: Test macOS target (Xcode)
        run: |
          set -o pipefail && xcodebuild clean test -project PactSwift.xcodeproj -scheme PactSwift-macOS -destination "platform=macOS,arch=x86_64" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES| xcbeautify

      - name: Test it builds for Carthage
        run: |
          echo "⚠️ Running 'carthage build' with a Xcode 12 workaround script - https://github.com/Carthage/Carthage/issues/3019#issuecomment-665136323"
          ./Scripts/carthage_xcode12 build --no-skip-current
