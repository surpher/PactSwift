#!/usr/bin/env bash

#  PactSwift
#
#  Created by Marko Justinek on 26/3/20.
#  Copyright © 2020 Itty Bitty Apps Pty Ltd / PACT Foundation. All rights reserved.
#  Permission to use, copy, modify, and/or distribute this software for any
#  purpose with or without fee is hereby granted, provided that the above
#  copyright notice and this permission notice appear in all copies.
#
#  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
#  SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
#  IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

set -eu

if [ $# -ne 2 ]; then
		echo "usage: build_file_list_and_swiftlint project_name swiftlint_yml"
		exit 1
fi

echo "--- 🤖 Linting $SRCROOT/Sources/*.swift"

if which swiftlint >/dev/null; then
		# Build a list of Swift files in the Sources directory
		find Sources -name \*.swift -exec echo "\$(SRCROOT)/"{} \; > $DERIVED_FILE_DIR/$1.xcfilelist

		# Update the xcfilelist if the list of Swift files has changed
		cmp --silent $SRCROOT/$1.xcfilelist $DERIVED_FILE_DIR/$1.xcfilelist || cp -f $DERIVED_FILE_DIR/$1.xcfilelist $SRCROOT/$1.xcfilelist

		# Run swiftlint (TODO: - swiftlint by iterating through the $1.xcfilelist)
		# swiftlint --config $2 -- #filename0 #filename1 #filename2 ...
		swiftlint --path Sources --config $2

		# Output an empty derived file
		touch $DERIVED_FILE_DIR/swiftlint.txt

		# All hunky dory
		echo "--- 👍 .swift files linted"
else
	echo "--- ⚠️ Swiftlint"
	echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
fi

echo "--- 🤖 Checking if Rust is installed..."

if which cargo >/dev/null; then
	echo "--- 👍 cargo installed"
elif command -v ~/.cargo/bin/cargo &> /dev/null; then
	echo "--- 👍 cargo installed in ~/.cargo/bin/"
else
	echo "--- 🚨 Rust not installed"
	echo "ERROR: cargo is required and is not found in `~/.cargo/bin`. Install Rust using either homebrew or follow instructions at https://www.rust-lang.org/tools/install"
	exit 1
fi
