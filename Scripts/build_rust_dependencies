#!/usr/bin/env bash

set -e pipefail

PRODUCT_NAME="PactSwift"
WORKSPACE=${GITHUB_WORKSPACE:-$PWD}
LIBPACT_FFI_DIR="${WORKSPACE}/../pact-reference/rust/pact_ffi"
LIBPACT_PRODUCT_DIR="${WORKSPACE}/../pact-reference/rust/target/debug"
CI=${CI:-"false"}
PACT_FOUNDATION_REPO="https://github.com/pact-foundation/pact-reference.git"

#######################
# Pre-requisite       #
#######################

if [ ! -d "$PWD/$PRODUCT_NAME.xcodeproj" ]
then
	echo "üö® Run this from the same folder where your '$PRODUCT_NAME.xcodeproj' lives."
	echo "‚ö†Ô∏è  You are runing it in $PWD"
	exit 1
fi

#######################
# If CI               #
#######################

echo "üëÆ‚Äç‚ôÄÔ∏è  Verifying project and dependencies' folder setup..."

if [[ "$CI" == true ]]; then
	echo "‚ÑπÔ∏è Adding submodule ${PACT_FOUNDATION_REPO}"
	if [ ! -d "$PWD/pact-reference"]; then
		git submodule add $PACT_FOUNDATION_REPO
	fi
	git submodule update --init
	cd pact-reference/rust/pact_ffi
elif [ ! -d "$PWD/../pact-reference" ]; then
	echo "üö® Missing pact-foundation/pact-reference repo."
	echo "‚ö†Ô∏è  Make sure you 'git clone ${PACT_FOUNDATION_REPO}' at the same folder level as your $PRODUCT_NAME."
	exit 1
else
	echo "üëç  Project setup seems to be in order."
	echo "‚ÑπÔ∏è  Changing location to ${LIBPACT_FFI_DIR}"
	cd $LIBPACT_FFI_DIR
fi

#######################
# Setup               #
#######################

# Validate dependencies

echo "üëÆ‚Äç‚ôÄÔ∏è  Checking if Rust is installed..."
if which cargo >/dev/null; then
	echo "üëç  cargo installed"
elif command -v ~/.cargo/bin/cargo &> /dev/null; then
	echo "üëç  cargo installed in ~/.cargo/bin/"
else
	echo "üö®  Rust/Cargo not installed"
	echo "ERROR: cargo is required and is was found on this machine. See https://www.rust-lang.org/tools/install"
 	exit 1
fi

##############################################
# Build libpact_ffi libraries                #
##############################################

# Using debug build flag (or not providing it), otherwise libpact_ffi.so must be moved into /usr/local/lib/
echo "üèó  Building libpact_ffi for current platform (debug build)"
cargo build
echo "‚úÖ  libpact_ffi built"

echo "‚ÑπÔ∏è  Setting LD_LIBRARY_PATH to include $LIBPACT_PRODUCT_DIR"
if [[ "$CI" == true ]]; then
	export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:${WORKSPACE}/pact-reference/rust/target/debug"
else
	export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LIBPACT_PRODUCT_DIR}"
fi

#######################
# Cleanup             #
#######################

echo "‚ÑπÔ∏è  Changing directory back to ${WORKSPACE}"
cd ${WORKSPACE}

##############################################################################################################
# Run Swift buld and test                                                                                    #
# https://github.com/apple/swift-package-manager/blob/main/Documentation/Usage.md#requiring-system-libraries #
##############################################################################################################

echo "‚ÑπÔ∏è  Running swift build:"
swift build -Xlinker -L$LIBPACT_PRODUCT_DIR

echo "‚ÑπÔ∏è  Running swift test with -Xlinker -L$LIBPACT_PRODUCT_DIR"

if [[ "$CI" == true ]]; then
	BIN_PATH="${WORKSPACE}/pact-reference/rust/target/debug"
	swift test -Xlinker -L$BIN_PATH
else
	swift test -Xlinker -L$LIBPACT_PRODUCT_DIR
fi
